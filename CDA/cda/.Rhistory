# get the lines of file
lines<-readLines('GDS5037/data_table.csv')
len <- length(lines)
data_COL=read.csv('GDS5037/data_table.csv',encoding='UTF-8',header=TRUE,nrows = 1)
COL <- colnames(data_COL)
description <- read.csv('GDS5037/description.csv')
denote <- data.frame(ID = c('MMA','control','SA'),Y = c(1,0,1))
data <- merge(description,denote,by = 'ID')
des <- data[,-c(1,2)]
View(data)
# Q1: build a baseline-categorial logit model use Y = C as baseline with any 5 identifiers without interaction.
description <- read.csv('GDS5037/description.csv')
denote <- data.frame(ID = c('MMA','control','SA'),Y = c(1,0,1))
data <- merge(description,denote,by = 'ID')
head5 <- read.csv('GDS5037/head5.csv',header = T)[c(1,2,3,4,5),];
head5 <- t(head5)
d <- head5
names <- rownames(d)
rownames(d) <- NULL
head5 <- cbind(names,d);
colnames(head5) <- c('ID_REF','FAM174B','AP3S2','SV2B','RBPMS2','AVEN');
data <- merge(data,head5,by = 'ID_REF');
data <- data %>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.character)
library(cdabookdb)
library(cdabookfunc)
library(VGAM)
library(tidyr)
library(cdabookdb)
library(MASS)
library(dplyr)
# Q1: build a baseline-categorial logit model use Y = C as baseline with any 5 identifiers without interaction.
description <- read.csv('GDS5037/description.csv')
denote <- data.frame(ID = c('MMA','control','SA'),Y = c(1,0,1))
data <- merge(description,denote,by = 'ID')
head5 <- read.csv('GDS5037/head5.csv',header = T)[c(1,2,3,4,5),];
head5 <- t(head5)
d <- head5
names <- rownames(d)
rownames(d) <- NULL
head5 <- cbind(names,d);
colnames(head5) <- c('ID_REF','FAM174B','AP3S2','SV2B','RBPMS2','AVEN');
data <- merge(data,head5,by = 'ID_REF');
data <- data %>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.character)
data <- data%>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.numeric)
View(data)
# Q1: build a baseline-categorial logit model use Y = C as baseline with any 5 identifiers without interaction.
description <- read.csv('GDS5037/description.csv')
denote <- data.frame(ID = c('MMA','control','SA'),Y = c('M','S','C'))
data <- merge(description,denote,by = 'ID')
head5 <- read.csv('GDS5037/head5.csv',header = T)[c(1,2,3,4,5),];
head5 <- t(head5)
d <- head5
names <- rownames(d)
rownames(d) <- NULL
head5 <- cbind(names,d);
colnames(head5) <- c('ID_REF','FAM174B','AP3S2','SV2B','RBPMS2','AVEN');
data <- merge(data,head5,by = 'ID_REF');
data <- data %>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.character)
data <- data%>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.numeric)
View(data)
# Q1: build a baseline-categorial logit model use Y = C as baseline with any 5 identifiers without interaction.
description <- read.csv('GDS5037/description.csv')
denote <- data.frame(ID = c('MMA','control','SA'),Y = c('M','S','C'))
data <- merge(description,denote,by = 'ID')
head5 <- read.csv('GDS5037/head5.csv',header = T)[c(1,2,3,4,5),];
head5 <- t(head5)
d <- head5
names <- rownames(d)
rownames(d) <- NULL
head5 <- cbind(names,d);
colnames(head5) <- c('ID_REF','FAM174B','AP3S2','SV2B','RBPMS2','AVEN');
data <- merge(data,head5,by = 'ID_REF');
data <- data %>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.character)
data <- data%>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.numeric)
View(data)
attach(data)
## Create a formula for a model with a large number of variables:
xnam <- paste0(colnames(data)[-c(1,2)])
(fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+"))))
m1 <- vglm(fmla,family = multinomial)
## Create a formula for a model with a large number of variables:
data = data[-c(1,2,3)]
xnam <- paste0(colnames(data)[-c(1,2)])
(fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+"))))
m1 <- vglm(fmla,family = multinomial,data = data)
summary(m1)
# Q1: build a baseline-categorial logit model use Y = C as baseline with any 5 identifiers without interaction.
description <- read.csv('GDS5037/description.csv')
denote <- data.frame(ID = c('MMA','control','SA'),Y = c('M','S','C'))
data <- merge(description,denote,by = 'ID')
head5 <- read.csv('GDS5037/head5.csv',header = T)[c(1,2,3,4,5),];
head5 <- t(head5)
d <- head5
names <- rownames(d)
rownames(d) <- NULL
head5 <- cbind(names,d);
colnames(head5) <- c('ID_REF','FAM174B','AP3S2','SV2B','RBPMS2','AVEN');
data <- merge(data,head5,by = 'ID_REF');
data <- data %>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.character)
data <- data%>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.numeric)
attach(data)
## Create a formula for a model with a large number of variables:
data = data[-c(1,2,3)]
xnam <- paste0(colnames(data)[-c(1)])
(fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+"))))
m1 <- vglm(fmla,family = multinomial,data = data)
summary(m1)
# Q1: build a baseline-categorial logit model use Y = C as baseline with any 5 identifiers without interaction.
description <- read.csv('GDS5037/description.csv')
denote <- data.frame(ID = c('MMA','control','SA'),Y = c('M','S','C'))
data <- merge(description,denote,by = 'ID')
head5 <- read.csv('GDS5037/head5.csv',header = T)[c(1,2,3,4,5),];
head5 <- t(head5)
d <- head5
names <- rownames(d)
rownames(d) <- NULL
head5 <- cbind(names,d);
colnames(head5) <- c('ID_REF','FAM174B','AP3S2','SV2B','RBPMS2','AVEN');
data <- merge(data,head5,by = 'ID_REF');
data <- data %>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.character)
data <- data%>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.numeric)
attach(data)
## Create a formula for a model with a large number of variables:
data = data[-c(1,2,3)]
xnam <- paste0(colnames(data)[-c(1)])
Y = factor(Y,levels = c('S','M','C'))
(fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+"))))
m1 <- vglm(fmla,family = multinomial,data = data)
summary(m1)
Y = factor(Y,levels = c('S','M','C'))
Y
Y = factor(Y,levels = c('S','M','C'))
(fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+"))))
m2.nopara <- vglm(fmla,family = cumulative(parallel = FALSE),data = data)
Y = factor(Y,levels = c('S','M','C'))
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.nopara <- vglm(fmla,family = cumulative(parallel = FALSE),data = data)
Y = factor(Y,levels = c('S','M','C'))
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.nopara <- vglm(fmla,family = cumulative(parallel = FALSE),data = data)
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.nopara <- vglm(fmla,family = cumulative(parallel = FALSE),data = data)
description <- read.csv('GDS5037/description.csv')
denote <- data.frame(ID = c('MMA','control','SA'),Y = c('M','S','C'))
data <- merge(description,denote,by = 'ID')
head5 <- read.csv('GDS5037/head5.csv',header = T)[c(1,2,3,4,5),];
head5 <- t(head5)
d <- head5
names <- rownames(d)
rownames(d) <- NULL
head5 <- cbind(names,d);
colnames(head5) <- c('ID_REF','FAM174B','AP3S2','SV2B','RBPMS2','AVEN');
data <- merge(data,head5,by = 'ID_REF');
data <- data %>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.character)
data <- data%>% mutate_at(c('FAM174B','AP3S2','SV2B','RBPMS2','AVEN'),as.numeric)
attach(data)
## Create a formula for a model with a large number of variables:
data = data[-c(1,2,3)]
xnam <- paste0(colnames(data)[-c(1)])
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.nopara <- vglm(fmla,family = cumulative(parallel = FALSE),data = data)
View(data)
class(data)
summary(data)
summary(data)
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.nopara <- vglm(fmla,family = cumulative(parallel = FALSE),data = data)
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.nopara <- vglm(fmla,family = cumulative(parallel = TRUE),data = data)
summary(m2.nopara)
Y = factor(Y,levels = c('S','M','C'))
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.nopara <- vglm(fmla,family = cumulative(parallel = TRUE),data = data)
summary(m2.nopara)
Y = factor(Y,levels = c('S','M','C'))
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.para <- vglm(fmla,family = cumulative(parallel = TRUE),data = data)
summary(m2.para)
Y = factor(Y,levels = c('S','M','C'))
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.para <- vglm(fmla,family = cumulative(parallel = TRUE),data = data)
summary(m2.para)
m2.para <- vglm(fmla,family = cumulative(parallel = FALSE),data = data)
Y = factor(Y,levels = c('S','M','C'))
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.para <- vglm(fmla,family = cumulative(parallel = TRUE),data = data)
summary(m2.para)
m2.para <- vglm(fmla,family = cumulative(parallel = FALSE),data = data)
data('marital_happiness')
force(marital_happiness)
data('marital_happiness')
marital_happiness <- as.data.frame(marital_happiness)
View(marital_happiness)
data('marital_happiness')
marital_happiness <- as.data.frame(marital_happiness)
model <- vglm(Happiness~Income,data = marital_happiness,weights = Freq,family = multinomial)
data('marital_happiness')
marital_happiness <- as.data.frame(marital_happiness)
model <- vglm(Happniess~Income,data = marital_happiness,weights = Freq,family = multinomial)
summary(model)
data('marital_happiness')
marital_happiness <- as.data.frame(marital_happiness)
attach(marital_happiness)
Happniess <- factor('Not happy','Pretty happy','Very happy')
model <- vglm(Happniess~Income,data = marital_happiness,weights = Freq,family = multinomial)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
data("ideology")
ftable(ideology)
library(cdabookdb)
library(cdabookfunc)
library(VGAM)
library(tidyr)
library(cdabookdb)
data("ideology")
ftable(ideology)
ide_margin <- margin.table(ideology,c(2,3))
ide_margin_df <- spread(as.data.frame(ide_margin), Ideology, Freq)
ideology <- as.data.frame(ideology)
# Question 2: Male =1, Rep = 1
ideology$fideology <- factor(ideology$Ideology,level = c('VLib', 'SLib', 'Mod', 'SCon', 'VCon'))
ide_m2 <- vglm(
fideology ~ (Party == "Rep")+(Gender == 'Male'),
data = ideology,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
View(ideology)
data("ideology")
ftable(ideology)
ide_margin <- margin.table(ideology,c(2,3))
ide_margin_df <- spread(as.data.frame(ide_margin), Ideology, Freq)
ideology <- as.data.frame(ide_margin_df)
# Question 1: Fit this data by Cumulative Logit Models with Proportional Odds Property
ide_m <- vglm(
cbind(VLib, SLib, Mod, SCon, VCon) ~ Party == "Dem",
data = ide_margin_df,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
summary(ide_m)
# Question 2: Male =1, Rep = 1
ideology$fideology <- factor(ideology$Ideology,level = c('VLib', 'SLib', 'Mod', 'SCon', 'VCon'))
# Question 2: Male =1, Rep = 1
ideology$fideology <- factor(ideology$Ideology,level = c('VLib', 'SLib', 'Mod', 'SCon', 'VCon'))
View(ideology)
data("ideology")
ftable(ideology)
ide_margin <- margin.table(ideology,c(2,3))
ide_margin_df <- spread(as.data.frame(ide_margin), Ideology, Freq)
ideology <- as.data.frame(ide_margin_df)
# Question 1: Fit this data by Cumulative Logit Models with Proportional Odds Property
ide_m <- vglm(
cbind(VLib, SLib, Mod, SCon, VCon) ~ Party == "Dem",
data = ide_margin_df,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
summary(ide_m)
# Question 2: Male =1, Rep = 1
ide_m2 <- vglm(
cbind(VLib, SLib, Mod, SCon, VCon) ~ (Party == "Rep")+(Gender == 'Male'),
data = ideology,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
data("ideology")
ftable(ideology)
ide_margin <- margin.table(ideology,c(2,3))
ide_margin_df <- spread(as.data.frame(ide_margin), Ideology, Freq)
# Question 1: Fit this data by Cumulative Logit Models with Proportional Odds Property
ide_m <- vglm(
cbind(VLib, SLib, Mod, SCon, VCon) ~ Party == "Dem",
data = ide_margin_df,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
summary(ide_m)
# Question 2: Male =1, Rep = 1
ide_m2 <- vglm(
cbind(VLib, SLib, Mod, SCon, VCon) ~ (Party == "Rep")+(Gender == 'Male'),
data = ideology,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
View(ide_margin_df)
data("ideology")
ftable(ideology)
ide_margin <- margin.table(ideology,c(2,3))
ide_margin_df <- spread(as.data.frame(ide_margin), Ideology, Freq)
ideology <- as.data.frame(ideology)
# Question 1: Fit this data by Cumulative Logit Models with Proportional Odds Property
ide_m <- vglm(
cbind(VLib, SLib, Mod, SCon, VCon) ~ Party == "Dem",
data = ide_margin_df,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
summary(ide_m)
# Question 2: Male =1, Rep = 1
ide_m2 <- vglm(
cbind(VLib, SLib, Mod, SCon, VCon) ~ (Party == "Rep")+(Gender == 'Male'),
data = ideology,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
View(ideology)
data("ideology")
ftable(ideology)
ide_margin <- margin.table(ideology,c(2,3))
ide_margin_df <- spread(as.data.frame(ide_margin), Ideology, Freq)
ideology <- as.data.frame(ideology)
# Question 1: Fit this data by Cumulative Logit Models with Proportional Odds Property
ide_m <- vglm(
cbind(VLib, SLib, Mod, SCon, VCon) ~ Party == "Dem",
data = ide_margin_df,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
summary(ide_m)
# Question 2: Male =1, Rep = 1
ideology$fideology = factor(ideology$ideology,level = c('VLib', 'SLib', 'Mod', 'SCon', 'VCon'))
data("ideology")
ftable(ideology)
ide_margin <- margin.table(ideology,c(2,3))
ide_margin_df <- spread(as.data.frame(ide_margin), Ideology, Freq)
ideology <- as.data.frame(ideology)
# Question 1: Fit this data by Cumulative Logit Models with Proportional Odds Property
ide_m <- vglm(
cbind(VLib, SLib, Mod, SCon, VCon) ~ Party == "Dem",
data = ide_margin_df,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
summary(ide_m)
# Question 2: Male =1, Rep = 1
ideology$fideology = factor(ideology$ideology,levels = c('VLib', 'SLib', 'Mod', 'SCon', 'VCon'))
View(ideology)
data("ideology")
ftable(ideology)
ide_margin <- margin.table(ideology,c(2,3))
ide_margin_df <- spread(as.data.frame(ide_margin), Ideology, Freq)
ideology <- as.data.frame(ideology)
# Question 1: Fit this data by Cumulative Logit Models with Proportional Odds Property
ide_m <- vglm(
cbind(VLib, SLib, Mod, SCon, VCon) ~ Party == "Dem",
data = ide_margin_df,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
summary(ide_m)
# Question 2: Male =1, Rep = 1
ideology$fideology = factor(ideology$Ideology,levels = c('VLib', 'SLib', 'Mod', 'SCon', 'VCon'))
ide_m2 <- vglm(
fideology ~ (Party == "Rep")+(Gender == 'Male'),
weights = Freq,
data = ideology,
family = cumulative(parallel = TRUE)
# cumulative probability and the effect of x is identical for all cumulative logits
)
summary(ide_m2)
data("impairment")
# Question 1: Fit this data by Cumulative logit model with ungrouped data with proportional odds
impairment_m1 <- vglm(
Impairment ~ LifeEvents + SES,
family = cumulative(parallel = TRUE),
# cumulative probability and the effect of x is identical for all cumulative logits
data = impairment
)
summary(impairment_m1)
# Question 2: Fit this data by Cumulative logit model with ungrouped data with non-proportional odds
impairment_m2 <- vglm(
Impairment ~ LifeEvents + SES,
family = cumulative(parallel = FALSE),
# cumulative probability and the effect of x is identical for all cumulative logits
data = impairment
)
summary(impairment_m2)
data("impairment")
m3 <- vglm(
factor(Impairment) ~ SES + LifeEvents,
family=cratio(reverse = FALSE, parallel = TRUE),
data = impairment
)
summary(m3)
data("impairment")
m3 <- vglm(
factor(Impairment) ~ SES + LifeEvents,
family=cratio(reverse = TRUE, parallel = TRUE),
data = impairment
)
summary(m3)
knitr::opts_chunk$set(echo = TRUE)
Y = factor(Y,levels = c('S','M','C'))
fmla <- as.formula(paste("Y ~ ", paste(xnam, collapse= "+")))
m2.para <- vglm(fmla,family = cumulative(parallel = TRUE),data = data)
summary(m2.para)
m2.para <- vglm(fmla,family = cumulative(parallel = FALSE),data = data)
library(cdabookdb)
library(cdabookfunc)
library(VGAM)
library(tidyr)
library(cdabookdb)
library(MASS)
library(dplyr)
data('marital_happiness')
marital_happiness <- as.data.frame(marital_happiness)
attach(marital_happiness)
Happniess <- factor('Not happy','Pretty happy','Very happy')
model <- vglm(Happniess~Income,data = marital_happiness,weights = Freq,family = multinomial)
summary(model)
View(marital_happiness)
data('marital_happiness')
marital_happiness <- as.data.frame(marital_happiness)
View(marital_happiness)
pi1 <- exp(-2.5551-0.2275*2)
pi2 <- exp(-0.3513-0.0962*2)
e_pi1 <- pi1/(1+pi1+pi2);e_pi1
e_pi2 <- pi2/(1+pi1+pi2);e_pi2
e_pi3 <- 1/(1+pi1+pi2);e_pi3
data('marital_happiness')
marital_happiness <- as.data.frame(marital_happiness)
attach(marital_happiness)
income_levle <- ifelse(marital_happiness$Income=='Below average income',1,
ifelse(marital_happiness$Income=='Average income',2,
ifelse(marital_happiness$Income=='Above average income',3)))
ncome_levle
data('marital_happiness')
marital_happiness <- as.data.frame(marital_happiness)
attach(marital_happiness)
income_levle <- ifelse(marital_happiness$Income=='Below average income',1,
ifelse(marital_happiness$Income=='Average income',2,3))
income_levle
Happniess <- factor('Not happy','Pretty happy','Very happy')
model <- vglm(Happniess~income_levle,data = marital_happiness,weights = Freq,family = multinomial)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
data('marital_happiness')
marital_happiness <- as.data.frame(marital_happiness)
attach(marital_happiness)
income_levle <- ifelse(marital_happiness$Income=='Below average income',1,
ifelse(marital_happiness$Income=='Average income',2,3))
Happniess <- factor('Not happy','Pretty happy','Very happy')
model <- vglm(Happniess~income_levle,data = marital_happiness,weights = Freq,family = cumulative())
library(cdabookdb)
library(cdabookfunc)
library(VGAM)
library(tidyr)
library(cdabookdb)
library(MASS)
library(dplyr)
model <- vglm(Happniess~income_levle,data = marital_happiness,weights = Freq,family = cumulative())
summary(model)
model <- vglm(Happniess~income_levle,data = marital_happiness,weights = Freq,family = cumulative(parallel = TRUE))
summary(model)
anova(model)
anova(model,type="I",test = "LRT")
pi_2 <- exp(-0.2378-0.1117*2)
pi3 <- 1-(pi_2/(1+pi_2));pi3
data('lungcancer_treatment')
data('lungcancer_treatment')
lung_treat <- as.data.frame(lungcancer_treatment)
View(lung_treat)
data('lungcancer_treatment')
lung_treat <- as.data.frame(lungcancer_treatment)
model <- vglm(Response~Gender+Therapy,family = cumulative(parallel = TRUE),data = lung_treat);summmary(model)
data('lungcancer_treatment')
lung_treat <- as.data.frame(lungcancer_treatment)
model <- vglm(Response~Gender+Therapy,family = cumulative(parallel = TRUE),data = lung_treat);summary(model)
data('lungcancer_treatment')
lung_treat <- as.data.frame(lungcancer_treatment)
model <- vglm(Response~Gender+Therapy,family = cumulative(parallel = TRUE),weights = Freq,data = lung_treat);summary(model)
data('lungcancer_treatment')
lung_treat <- as.data.frame(lungcancer_treatment)
# with proportional odds.
model1 <- vglm(Response~Gender+Therapy,
family = cumulative(parallel = TRUE),
weights = Freq,
data = lung_treat);summary(model1)
# without proportional odds.
model2 <- vglm(Response~Gender+Therapy,
family = cumulative(parallel = FALSE),
weights = Freq,
data = lung_treat);summary(model2)
data('lungcancer_treatment')
lung_treat <- as.data.frame(lungcancer_treatment)
# with proportional odds.
model1 <- vglm(Response~Gender+Therapy,
family = cumulative(parallel = TRUE),
weights = Freq,
data = lung_treat);summary(model1)
# # without proportional odds.
# model2 <- vglm(Response~Gender+Therapy,
#               family = cumulative(parallel = FALSE),
#               weights = Freq,
#               data = lung_treat);summary(model2)
model2 <- vglm(Response~Gender+Therapy+Gender*Therapy,
family = cumulative(parallel = TRUE),
weights = Freq,
data = lung_treat);summary(model2)
anova(model2,type = 'LRT',test = 'I')
anova(model2,type = 'LRT')
anova(model2,test = 'LRT')
knitr::opts_chunk$set(echo = TRUE)
pi3 <- 1-(1/(1+pi_2));pi3
data('lungcancer_treatment')
lung_treat <- as.data.frame(lungcancer_treatment)
# with proportional odds.
model1 <- vglm(Response~Gender+Therapy,
family = cumulative(parallel = TRUE),
weights = Freq,
data = lung_treat);summary(model1)
